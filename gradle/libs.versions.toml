[versions]
agp = "8.2.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
navigationcompose="2.8.0-alpha08"
lifecycleviewmodelcompose="2.6.2"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.0"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.0"
compose-plugin = "1.6.11"
junit = "4.13.2"
kotlin = "2.0.0"

compose-ui-android = "1.6.7"
compose-multiplatform = "1.6.10"
decomposeVersion = "3.0.0"
image-loader = "1.8.0"
koinCore = "3.5.6"
kotlinx-coroutines-core = "1.8.1"
kotlinx-serialization-json = "1.7.0-RC"
ktor-client = "2.3.11"
essenty-lifecycle = "2.0.0"
material3WindowSizeClassMultiplatform = "0.5.0"
mvvm-core = "0.16.1"
sqlite-driver = "2.0.2"
coil = "2.4.0"
lifecycleRuntimeKtx = "2.6.1"
annotationJvm = "1.8.0"
voyager = "1.0.0"
preCompose = "1.5.10"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
# compose
androidx-navigationcompose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationcompose" }
androidx-lifecycleviewmodelcompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycleviewmodelcompose" }
androidx-lifecycleruntimecompose= {group = "androidx.lifecycle",name = "lifecycle-runtime-compose"}



androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlite-driver" }
com-arkivanov-decompose-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decomposeVersion" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decomposeVersion" }
image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "image-loader" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinCore" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui-android" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui-android" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui-android" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-ui-android" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-ui-android" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor-client" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-client" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-client" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor-client" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-client" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty-lifecycle" }
material3-windowsizeclass-multiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "material3WindowSizeClassMultiplatform" }
mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "mvvm-core" }
native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlite-driver" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlite-driver" }
web-worker-driver = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlite-driver" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
coil = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }
androidx-annotation-jvm = { group = "androidx.annotation", name = "annotation-jvm", version.ref = "annotationJvm" }
navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
navigator-screen-model = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
navigator-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
navigator-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
preCompose = { module = "moe.tlaster:precompose", version.ref = "preCompose" }
preCompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "preCompose" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }